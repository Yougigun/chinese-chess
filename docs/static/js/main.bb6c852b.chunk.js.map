{"version":3,"sources":["ChineseChess/ChineseChess.module.css","ChineseChess/ChineseChessTable/ChineseChessTable.module.css","logo.svg","ChineseChess/ChineseChessTable/ChineseChessTable.js","ChineseChess/ChineseChess.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ChineseChessTable","Size","CarPos","tableTD","table","tdOfCar","y","push","x","className","classes","ChineseChess","useState","carPosition","setCarPosition","carInputX","setCarInputX","carInputY","setCarInputY","onChange","e","target","value","type","min","max","onClick","cur","nextX","nextY","parseInt","window","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,kBAAoB,+C,0HCDvB,I,mDCgCAC,EA9BW,SAAC,GAIvB,IAJ0C,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,OACzBC,EAAS,GACTC,EAAQ,GACRC,EAAU,GACLC,EAAI,EAAEA,EAAEL,EAAKK,EAAEA,IACpBH,EAAQI,KAAK,wBAEjB,IAAK,IAAID,EAAI,EAAEA,EAAEL,EAAKK,EAAEA,IAChBJ,EAAOI,IAAMA,EACbD,EAAQE,KAAK,yCAEbF,EAAQE,KAAK,wBAIrB,IAAK,IAAIC,EAAI,EAAEA,EAAEP,EAAKO,EAAEA,IAChBN,EAAOM,IAAMA,EACbJ,EAAMG,KAAM,6BAAKF,KAEjBD,EAAMG,KAAM,6BAAKJ,KAIzB,OADAC,EAAS,gCAAQA,IAEb,qBAAKK,UAAWC,IAAQV,kBAAxB,SACSI,KCkBFO,EAxCM,WAAO,IAAD,EACeC,mBAAS,CAACJ,EAAE,EAAEF,EAAE,IAD/B,mBAChBO,EADgB,KACHC,EADG,OAEWF,mBAAS,GAFpB,mBAEhBG,EAFgB,KAELC,EAFK,OAGWJ,mBAAS,GAHpB,mBAGhBK,EAHgB,KAGLC,EAHK,KAqBvB,OACI,sBAAKT,UAAWC,IAAQC,aAAxB,UACI,cAAC,EAAD,CAAmBV,KAAM,CAACO,EAAE,GAAGF,EAAE,IAAKJ,OAAQW,IAC9C,sEACA,uBACIM,SAAU,SAAAC,GAAIJ,EAAaI,EAAEC,OAAOC,QACpCA,MAAOP,EACPQ,KAAK,SAASC,IAAI,IAAIC,IAAI,MAC9B,qEACA,uBACIN,SAAU,SAAAC,GAAIF,EAAaE,EAAEC,OAAOC,QACpCA,MAAOL,EACPM,KAAK,SAASC,IAAI,IAAIC,IAAI,MAC9B,wBAAQC,QAAS,WA7BH,IAACC,EAAIC,EAAMC,EAAVF,EA8BGd,EA9BCe,EA8BWb,EA9BLc,EA8BeZ,EA7B5CW,EAAQE,SAASF,GACjBC,EAAQC,SAASD,GAEXF,EAAInB,IAAMoB,GAASD,EAAIrB,IAAMuB,GAC3BD,EAAM,GAAK,EAAEA,GACbC,EAAM,GAAK,EAAEA,GACjBb,EAAaH,EAAYL,GACzBU,EAAaL,EAAYP,GACzByB,OAAOC,MAAM,qBAGjBlB,EAAe,CAACN,EAAEoB,EAAMtB,EAAEuB,KAiBtB,oBC3BGI,MATf,WACE,OACE,sBAAKxB,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,QCKSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb6c852b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChineseChess\":\"ChineseChess_ChineseChess__1p6gd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChineseChessTable\":\"ChineseChessTable_ChineseChessTable__2pqPE\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport classes from './ChineseChessTable.module.css'\r\nconst ChineseChessTable = ({Size,CarPos}) => {\r\n    let tableTD =[]\r\n    let table = []\r\n    let tdOfCar = []\r\n    for (let y = 0;y<Size.y;y++){\r\n        tableTD.push(<td></td>)\r\n    }\r\n    for (let y = 0;y<Size.y;y++){\r\n        if (CarPos.y === y) {\r\n            tdOfCar.push(<td>車</td>)\r\n        } else {\r\n            tdOfCar.push(<td></td>)\r\n        }\r\n        \r\n    }\r\n    for (let x = 0;x<Size.x;x++){\r\n        if (CarPos.x === x) {\r\n            table.push((<tr>{tdOfCar}</tr>))\r\n        } else {\r\n            table.push((<tr>{tableTD}</tr>))\r\n        }\r\n    }\r\n    table = (<table>{table}</table>)\r\n    return (\r\n        <div className={classes.ChineseChessTable}>\r\n                {table}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChineseChessTable\r\n","import React,{useState} from 'react'\r\nimport classes from './ChineseChess.module.css'\r\nimport ChineseChessTable from './ChineseChessTable/ChineseChessTable'\r\n\r\n\r\nconst ChineseChess = () => {\r\n    const [carPosition, setCarPosition] = useState({x:0,y:0})\r\n    const [carInputX, setCarInputX] = useState(0)\r\n    const [carInputY, setCarInputY] = useState(0)\r\n\r\n    const checkCarValid = (cur,nextX,nextY) => {\r\n        nextX = parseInt(nextX)\r\n        nextY = parseInt(nextY)\r\n\r\n        if (((cur.x !== nextX)&&(cur.y !== nextY))\r\n            ||((nextX<0)||(9<nextX))\r\n            ||((nextY<0)||(9<nextY))){\r\n            setCarInputX(carPosition.x)\r\n            setCarInputY(carPosition.y)\r\n            window.alert(\"Cannot go there.\")\r\n            return false\r\n        }\r\n        setCarPosition({x:nextX,y:nextY})\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <div className={classes.ChineseChess}>\r\n            <ChineseChessTable Size={{x:10,y:10}} CarPos={carPosition}/>\r\n            <label>移動車至 X (0-9):</label>\r\n            <input \r\n                onChange={e=>{setCarInputX(e.target.value)}} \r\n                value={carInputX}\r\n                type=\"number\" min=\"0\" max=\"9\"/>\r\n            <label>移動車至 Y(0-9):</label>\r\n            <input \r\n                onChange={e=>{setCarInputY(e.target.value)}} \r\n                value={carInputY}\r\n                type=\"number\" min=\"0\" max=\"9\"/>\r\n            <button onClick={()=>{\r\n                checkCarValid(carPosition,carInputX,carInputY)}}>Go</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChineseChess","import logo from './logo.svg';\nimport './App.css';\nimport ChineseChess from './ChineseChess/ChineseChess';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>象棋</h1>\n      <ChineseChess/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}